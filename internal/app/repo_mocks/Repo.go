// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	model "curr-quote/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// Repo is an autogenerated mock type for the Repo type
type Repo struct {
	mock.Mock
}

// GetQuote provides a mock function with given fields: ctx, id, curr
func (_m *Repo) GetQuote(ctx context.Context, id string, curr model.Currency) (model.Quote, error) {
	ret := _m.Called(ctx, id, curr)

	var r0 model.Quote
	if rf, ok := ret.Get(0).(func(context.Context, string, model.Currency) model.Quote); ok {
		r0 = rf(ctx, id, curr)
	} else {
		r0 = ret.Get(0).(model.Quote)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, model.Currency) error); ok {
		r1 = rf(ctx, id, curr)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetQuote provides a mock function with given fields: ctx, id, curr, quote
func (_m *Repo) SetQuote(ctx context.Context, id string, curr model.Currency, quote model.Quote) error {
	ret := _m.Called(ctx, id, curr, quote)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, model.Currency, model.Quote) error); ok {
		r0 = rf(ctx, id, curr, quote)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepo creates a new instance of Repo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepo(t mockConstructorTestingTNewRepo) *Repo {
	mock := &Repo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
